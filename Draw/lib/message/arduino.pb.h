/* Automatically generated nanopb header */
/* Generated by nanopb-0.4.2 */

#ifndef PB_ARDUINO_PB_H_INCLUDED
#define PB_ARDUINO_PB_H_INCLUDED
#include <pb.h>

#if PB_PROTO_HEADER_VERSION != 40
#error Regenerate this file with the current version of nanopb generator.
#endif

#ifdef __cplusplus
extern "C" {
#endif

/* Enum definitions */
typedef enum _ArduinoCommand_CommandType {
    ArduinoCommand_CommandType_SCAN = 0,
    ArduinoCommand_CommandType_BATTERY = 1
} ArduinoCommand_CommandType;

/* Struct definitions */
typedef struct _ArduinoCommand {
    ArduinoCommand_CommandType command;
} ArduinoCommand;


/* Helper constants for enums */
#define _ArduinoCommand_CommandType_MIN ArduinoCommand_CommandType_SCAN
#define _ArduinoCommand_CommandType_MAX ArduinoCommand_CommandType_BATTERY
#define _ArduinoCommand_CommandType_ARRAYSIZE ((ArduinoCommand_CommandType)(ArduinoCommand_CommandType_BATTERY+1))


/* Initializer values for message structs */
#define ArduinoCommand_init_default              {_ArduinoCommand_CommandType_MIN}
#define ArduinoCommand_init_zero                 {_ArduinoCommand_CommandType_MIN}

/* Field tags (for use in manual encoding/decoding) */
#define ArduinoCommand_command_tag               1

/* Struct field encoding specification for nanopb */
#define ArduinoCommand_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, UENUM,    command,           1)
#define ArduinoCommand_CALLBACK NULL
#define ArduinoCommand_DEFAULT NULL

extern const pb_msgdesc_t ArduinoCommand_msg;

/* Defines for backwards compatibility with code written before nanopb-0.4.0 */
#define ArduinoCommand_fields &ArduinoCommand_msg

/* Maximum encoded size of messages (where known) */
#define ArduinoCommand_size                      2

#ifdef __cplusplus
} /* extern "C" */
#endif

#endif
